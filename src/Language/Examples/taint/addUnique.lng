main :: (Any, [Any]) -> [Any]
main (prog) {
    add (fst (prog), snd (prog))
}

add :: Any -> [Any] -> [Any]
add (x, l) {
    union([x], l)
}

addUnique :: Any -> [Any] -> [Any]
addUnique (x, l) {
    if (elem(x, l))
        then l
        else [x] ++ l
}

elem :: Any -> [Any] -> int
elem (x, l) {
    if (isNil(l))
        then 0
        else if (isEqual(head(l), x))
            then 1
            else elem(x, tail(l))
}
